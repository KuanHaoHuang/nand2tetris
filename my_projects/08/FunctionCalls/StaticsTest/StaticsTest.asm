// Bootstrap
@256
D=A
@R0
M=D
// call function: Sys.init, #args=0
@RET$0
D=A
@R15
M=D
@R15
D=M
@R0
A=M
M=D
@R0
M=M+1
@R1
D=M
@R0
A=M
M=D
@R0
M=M+1
@R2
D=M
@R0
A=M
M=D
@R0
M=M+1
@R3
D=M
@R0
A=M
M=D
@R0
M=M+1
@R4
D=M
@R0
A=M
M=D
@R0
M=M+1
@5
D=A
@0
D=D+A
@R0
D=M-D
@R2
M=D
@R0
D=M
@R1
M=D
@Sys.init
0;JMP
(RET$0)
// def function: Class1.set, #vars=0
(Class1.set)
// push argument 0
@R2
D=M
@0
A=D+A
D=M
@R0
A=M
M=D
@R0
M=M+1
// pop static 0
@R0
M=M-1
A=M
D=M
@StaticsTest.Class1$0
M=D
// push argument 1
@R2
D=M
@1
A=D+A
D=M
@R0
A=M
M=D
@R0
M=M+1
// pop static 1
@R0
M=M-1
A=M
D=M
@StaticsTest.Class1$1
M=D
// push constant 0
@0
D=A
@R0
A=M
M=D
@R0
M=M+1
// return
@R1
D=M
@R13
M=D
@5
A=D-A
D=M
@R15
M=D
@R0
M=M-1
A=M
D=M
@R2
A=M
M=D
@R2
D=M+1
@R0
M=D
@R13
D=M
D=D-1
A=D
D=M
@4
M=D
@R13
D=M
D=D-1
D=D-1
A=D
D=M
@3
M=D
@R13
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@2
M=D
@R13
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@1
M=D
@R15
A=M
0;JMP
// def function: Class1.get, #vars=0
(Class1.get)
// push static 0
@StaticsTest.Class1$0
D=M
@R0
A=M
M=D
@R0
M=M+1
// push static 1
@StaticsTest.Class1$1
D=M
@R0
A=M
M=D
@R0
M=M+1
// sub
@R0
M=M-1
A=M
D=-M
@R0
M=M-1
A=M
M=D+M
@R0
M=M+1
// return
@R1
D=M
@R13
M=D
@5
A=D-A
D=M
@R15
M=D
@R0
M=M-1
A=M
D=M
@R2
A=M
M=D
@R2
D=M+1
@R0
M=D
@R13
D=M
D=D-1
A=D
D=M
@4
M=D
@R13
D=M
D=D-1
D=D-1
A=D
D=M
@3
M=D
@R13
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@2
M=D
@R13
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@1
M=D
@R15
A=M
0;JMP
// def function: Sys.init, #vars=0
(Sys.init)
// push constant 6
@6
D=A
@R0
A=M
M=D
@R0
M=M+1
// push constant 8
@8
D=A
@R0
A=M
M=D
@R0
M=M+1
// call function: Class1.set, #args=2
@RET$1
D=A
@R15
M=D
@R15
D=M
@R0
A=M
M=D
@R0
M=M+1
@R1
D=M
@R0
A=M
M=D
@R0
M=M+1
@R2
D=M
@R0
A=M
M=D
@R0
M=M+1
@R3
D=M
@R0
A=M
M=D
@R0
M=M+1
@R4
D=M
@R0
A=M
M=D
@R0
M=M+1
@5
D=A
@2
D=D+A
@R0
D=M-D
@R2
M=D
@R0
D=M
@R1
M=D
@Class1.set
0;JMP
(RET$1)
// pop temp 0
@R0
M=M-1
@R5
D=A
@0
A=D+A
D=A
@tmp_
M=D
@R0
A=M
D=M
@tmp_
A=M
M=D
// push constant 23
@23
D=A
@R0
A=M
M=D
@R0
M=M+1
// push constant 15
@15
D=A
@R0
A=M
M=D
@R0
M=M+1
// call function: Class2.set, #args=2
@RET$2
D=A
@R15
M=D
@R15
D=M
@R0
A=M
M=D
@R0
M=M+1
@R1
D=M
@R0
A=M
M=D
@R0
M=M+1
@R2
D=M
@R0
A=M
M=D
@R0
M=M+1
@R3
D=M
@R0
A=M
M=D
@R0
M=M+1
@R4
D=M
@R0
A=M
M=D
@R0
M=M+1
@5
D=A
@2
D=D+A
@R0
D=M-D
@R2
M=D
@R0
D=M
@R1
M=D
@Class2.set
0;JMP
(RET$2)
// pop temp 0
@R0
M=M-1
@R5
D=A
@0
A=D+A
D=A
@tmp_
M=D
@R0
A=M
D=M
@tmp_
A=M
M=D
// call function: Class1.get, #args=0
@RET$3
D=A
@R15
M=D
@R15
D=M
@R0
A=M
M=D
@R0
M=M+1
@R1
D=M
@R0
A=M
M=D
@R0
M=M+1
@R2
D=M
@R0
A=M
M=D
@R0
M=M+1
@R3
D=M
@R0
A=M
M=D
@R0
M=M+1
@R4
D=M
@R0
A=M
M=D
@R0
M=M+1
@5
D=A
@0
D=D+A
@R0
D=M-D
@R2
M=D
@R0
D=M
@R1
M=D
@Class1.get
0;JMP
(RET$3)
// call function: Class2.get, #args=0
@RET$4
D=A
@R15
M=D
@R15
D=M
@R0
A=M
M=D
@R0
M=M+1
@R1
D=M
@R0
A=M
M=D
@R0
M=M+1
@R2
D=M
@R0
A=M
M=D
@R0
M=M+1
@R3
D=M
@R0
A=M
M=D
@R0
M=M+1
@R4
D=M
@R0
A=M
M=D
@R0
M=M+1
@5
D=A
@0
D=D+A
@R0
D=M-D
@R2
M=D
@R0
D=M
@R1
M=D
@Class2.get
0;JMP
(RET$4)
// labeling: WHILE
(WHILE)
// goto: WHILE
@WHILE
0;JMP
// def function: Class2.set, #vars=0
(Class2.set)
// push argument 0
@R2
D=M
@0
A=D+A
D=M
@R0
A=M
M=D
@R0
M=M+1
// pop static 0
@R0
M=M-1
A=M
D=M
@StaticsTest.Class2$0
M=D
// push argument 1
@R2
D=M
@1
A=D+A
D=M
@R0
A=M
M=D
@R0
M=M+1
// pop static 1
@R0
M=M-1
A=M
D=M
@StaticsTest.Class2$1
M=D
// push constant 0
@0
D=A
@R0
A=M
M=D
@R0
M=M+1
// return
@R1
D=M
@R13
M=D
@5
A=D-A
D=M
@R15
M=D
@R0
M=M-1
A=M
D=M
@R2
A=M
M=D
@R2
D=M+1
@R0
M=D
@R13
D=M
D=D-1
A=D
D=M
@4
M=D
@R13
D=M
D=D-1
D=D-1
A=D
D=M
@3
M=D
@R13
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@2
M=D
@R13
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@1
M=D
@R15
A=M
0;JMP
// def function: Class2.get, #vars=0
(Class2.get)
// push static 0
@StaticsTest.Class2$0
D=M
@R0
A=M
M=D
@R0
M=M+1
// push static 1
@StaticsTest.Class2$1
D=M
@R0
A=M
M=D
@R0
M=M+1
// sub
@R0
M=M-1
A=M
D=-M
@R0
M=M-1
A=M
M=D+M
@R0
M=M+1
// return
@R1
D=M
@R13
M=D
@5
A=D-A
D=M
@R15
M=D
@R0
M=M-1
A=M
D=M
@R2
A=M
M=D
@R2
D=M+1
@R0
M=D
@R13
D=M
D=D-1
A=D
D=M
@4
M=D
@R13
D=M
D=D-1
D=D-1
A=D
D=M
@3
M=D
@R13
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@2
M=D
@R13
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@1
M=D
@R15
A=M
0;JMP
